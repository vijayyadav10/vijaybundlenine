{"version":3,"sources":["apis/strapiApi.js","App.js","custom-element/et-app.js"],"names":["getContent","collectionType","id","a","url","eq","axios","get","data","App","name","useState","useEffect","console","log","ATTRIBUTES","WidgetElement","oldValue","newValue","Object","values","includes","Error","this","mountPoint","render","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"yOAGaA,EAAU,uCAAG,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,6DAClBC,EAJO,6BAIQH,EAAT,sBAAyCI,GAAzC,aAAgDH,GADpC,SAEHI,MAAMC,IAAIH,GAFP,cAEhBI,EAFgB,yBAGfA,GAHe,2CAAH,wD,OCwBRC,MAxBf,YAAsB,IAARC,EAAO,EAAPA,KACV,EAA0BC,mBAAS,IAAnC,mBAYA,OAZA,UAEAC,qBAAU,WACNC,QAAQC,IAAI,qBACZ,sBAAE,4BAAAX,EAAA,6DACFU,QAAQC,IAAI,0BADV,SAEoBd,EAAW,WAAY,KAF3C,OAEOQ,EAFP,OAGCK,QAAQC,IAAI,OAAON,GAHpB,0CAAF,KAKD,IAEHK,QAAQC,IAAI,iDAAiDJ,GAEzD,8BACI,iCACI,wCACYA,UCdtBK,EAAa,CACfL,KAAM,QAGJM,E,8KAMF,SAAyBN,EAAMO,EAAUC,GAErC,GADAL,QAAQC,IAAI,2BAA4BJ,EAAMO,EAAUC,IACnDC,OAAOC,OAAOL,GAAYM,SAASX,GACpC,MAAM,IAAIY,MAAJ,uCAA0CZ,IAEhDa,KAAKC,YAAcN,IAAaD,GAChCM,KAAKE,W,+BAIb,WACIF,KAAKC,WAAaE,SAASC,cAAc,OACzCJ,KAAKK,YAAYL,KAAKC,YACtBD,KAAKE,W,oBAGT,WACI,IAAMf,EAAOa,KAAKM,aAAad,EAAWL,MAC1CG,QAAQC,IAAI,gBAAgBJ,GAC5BoB,IAASL,OAAO,cAAC,EAAD,CAAKf,KAAMA,IAAUa,KAAKC,e,+BAvB9C,WACI,OAAOL,OAAOC,OAAOL,O,eAHDgB,cA6B5BC,eAAeC,OAAO,YAAajB,K","file":"static/js/main.b62d2339.chunk.js","sourcesContent":["const apiUrl = 'http://localhost:1337/api/'\n// customers?filters[id][$eq]=1\n\nexport const getContent = async (collectionType, id) => {\n    let url = apiUrl + collectionType + `filters[id][${eq}]=${id}`;\n    const data = await axios.get(url);\n    return data;\n}","import React, { useEffect, useState } from 'react';\nimport { getContent } from './apis/strapiApi';\n\nfunction App({name}) {\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        console.log(\"DATA DATADATADATA\");\n        ( async () => {\n        console.log(\"DATA DATADATADATA SATA\");\n           const data = await getContent('projects', '1')\n           console.log(\"DATA\",data);\n        })()\n    }, [])\n\n    console.log(\"UI/WIDGETS/WIDGETS-DIR/ET-WIDGET: function App\",name)\n    return (\n        <div>\n            <header>\n                <p>\n                    Hello, {name}\n                </p>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\n\n\nconst ATTRIBUTES = {\n    name: 'name',\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        console.log(\"name, oldValue, newValue\", name, oldValue, newValue)\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        console.log(\"render() name\",name);\n        ReactDOM.render(<App name={name} />, this.mountPoint);\n    }\n}\n\ncustomElements.define('my-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}